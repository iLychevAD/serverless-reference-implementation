{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        // "service_dev_dsaas_portal_manual_name": {
        //     "defaultValue": "dev-dsaas-portal-manual",
        //     "type": "String"
        // },
      "publisherEmail": {
        "type": "string",
        "defaultValue": "nonamen@example.com",
        "minLength": 1,
        "metadata": {
          "description": "The email address of the owner of the service"
        }
      },
      "publisherName": {
        "type": "string",
        "defaultValue": "noname",
        "minLength": 1,
        "metadata": {
          "description": "The name of the owner of the service"
        }
      },
      "sku": {
        "type": "string",
        "defaultValue": "Consumption",
        "metadata": {
          "description": "The pricing tier of this API Management service"
        }
      },
      "skuCount": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "The instance size of this API Management service."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "functionAppUrlV1": {
        "type": "string",
        "defaultValue": "https://dev-dsaas-portal-status.azurewebsites.net/api",
        "metadata": {
          "description": "Function app url"
        }
      },
      "functionAppNameV1": {
        "type": "string",
        "defaultValue": "dev-dsaas-portal-status",
        "metadata": {
          "description": "Function app name"
        }
      },
      "functionAppCodeV1": {
        "type": "securestring",
        "metadata": {
          "description": "Function app code"
        }
      },
      "functionAppUrlV2": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Function app url V2"
        }
      },
      "functionAppNameV2": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Function app name V2"
        }
      },
      "functionAppCodeV2": {
        "type": "securestring",
        "defaultValue": "",
        "metadata": {
          "description": "Function app code V2"
        }
      },
      // "requireSubscription": {
      //   "type": "bool",
      //   "defaultValue": false,
      //   "metadata": {
      //     "description": "indicates whether subscription is required"
      //   }
      // }
      "tenantId": {
        "type": "string"
      },
      "appName": {
        "type": "string"
      },
      "droneStatusFunctionAppAADClientId": {
          "type": "string"
      }
    },
    "variables": {
      "apiManagementServiceName": "[parameters('appName')]", //"[concat(resourceGroup().name,'-apim1-', uniqueString(resourceGroup().id))]", //"[parameters('appName')]",//
      "functionAppResourceIdV1": "[resourceId('Microsoft.Web/sites', parameters('functionAppNameV1'))]",
      "functionAppResourceIdV2": "[if(empty(parameters('functionAppNameV2')),'',resourceId('Microsoft.Web/sites', parameters('functionAppNameV2')))]",
      "xmlJsonEscapedPolicyV1": "[concat('<policies>\r\n    <inbound>\r\n        <base \/>\r\n        <rewrite-uri template=\"GetStatusFunction?deviceId={deviceid}\" \/>\r\n        <set-backend-service id=\"apim-generated-policy\" backend-id=\"dev-dsaas-portal-status\" \/>\r\n   <cors allow-credentials=\"true\">\r\n   <allowed-origins>\r\n    <origin>https://', parameters('appName'), '.azureedge.net <\/origin>\r\n   <\/allowed-origins>\r\n   <allowed-methods>\r\n    <method>GET<\/method>\r\n   <\/allowed-methods>\r\n   <allowed-headers>\r\n    <header>*<\/header>\r\n   <\/allowed-headers>\r\n  <\/cors>\r\n  <validate-jwt header-name=\"Authorization\" failed-validation-httpcode=\"401\" failed-validation-error-message=\"Validate JWT APIM policy: unauthorized. Access token is missing or invalid.\">\r\n   <openid-config url=\"https://login.microsoftonline.com/', parameters('tenantId'), '/.well-known/openid-configuration\" \/>\r\n   <required-claims>\r\n    <claim name=\"aud\">\r\n     <value>', parameters('droneStatusFunctionAppAADClientId'), '<\/value>\r\n    <\/claim>\r\n   <\/required-claims>\r\n  <\/validate-jwt>\r\n <\/inbound>\r\n    <backend>\r\n        <forward-request \/>\r\n<\/backend>\r\n    <outbound>\r\n        <base \/>\r\n    <\/outbound>\r\n    <on-error>\r\n        <base \/>\r\n    <\/on-error>\r\n<\/policies>')]",
      "xmlJsonEscapedPolicyV2": "<policies>\r\n    <inbound>\r\n        <base \/>\r\n        <rewrite-uri template=\"GetStatusFunction?deviceId={deviceid}\" \/>\r\n        <set-backend-service id=\"apim-generated-policy-v2\" backend-id=\"dronestatusnodejs\" \/>\r\n   <\/inbound>\r\n    <backend>\r\n        <forward-request \/>\r\n<\/backend>\r\n    <outbound>\r\n        <base \/>\r\n    <\/outbound>\r\n    <on-error>\r\n        <base \/>\r\n    <\/on-error>\r\n<\/policies>",
      "versionSetName": "versionset",
      "versionSetId": "[concat('Microsoft.ApiManagement/service/',variables('apiManagementServiceName'),'/apiVersionSets/',variables('versionSetName'))]",
      "apiVersionSetId": "[concat('/apiVersionSets/',variables('versionSetName'))]",
      "deployV2": "[if(empty(parameters('functionAppUrlV2')),'No','Yes')]"
    },
    "resources": [
        {
            //"type": "Microsoft.ApiManagement/service/apis/api-version-sets",
            "name": "[concat(variables('apiManagementServiceName'), '/' ,variables('versionSetName'))]",
            "type": "Microsoft.ApiManagement/service/apiVersionSets",
             "apiVersion": "2020-06-01-preview",
            "dependsOn": [
              "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
            ],
            "properties": {
                "displayName": "Drone Delivery API",
                "versioningScheme": "Segment"
            }
        },
        {
            "apiVersion": "2021-01-01-preview",
            "name": "[variables('apiManagementServiceName')]",
            "type": "Microsoft.ApiManagement/service",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('sku')]",
                "capacity": 0
            },
            "properties": {
               "publisherEmail": "[parameters('publisherEmail')]",
               "publisherName": "[parameters('publisherName')]",
               "hostnameConfigurations": [
                    {
                        "type": "Proxy",
                        "hostName": "[concat(variables('apiManagementServiceName'), '.azure-api.net')]",
                        "negotiateClientCertificate": false,
                        "defaultSslBinding": true,
                        "certificateSource": "BuiltIn"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(variables('apiManagementServiceName'), '/dev-dsaas-portal-status')]",
            "dependsOn": [
              "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
              "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/backends/dev-dsaas-portal-status')]"
              //"[variables('versionSetId')]"
            ],
            // "properties": {
            //     "displayName": "dev-dsaas-portal-status",
            //     "apiRevision": "1",
            //     "description": "Import from \"dev-dsaas-portal-status\" Function App",
            //     "subscriptionRequired": true,
            //     "path": "dev-dsaas-portal-status",
            //     "protocols": [
            //         "https"
            //     ],
            //     "isCurrent": true
            // }
            "properties": {
              "displayName": "Drone Delivery",
              "description": "Drone Delivery API",
              "path": "api",
              "apiVersion": "v1",
              "apiVersionSetId": "[variables('apiVersionSetId')]",
              "subscriptionRequired": false,
              "protocols": [
                "HTTPS"
              ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(variables('apiManagementServiceName'), '/dev-dsaas-portal-status/get-getstatusfunction')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apiManagementServiceName'), 'dev-dsaas-portal-status')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
            ],
            // "properties": {
            //     "displayName": "GetStatusFunction",
            //     "method": "GET",
            //     "urlTemplate": "/GetStatusFunction",
            //     "templateParameters": [],
            //     "responses": []
            // }
                "properties": {
                  "displayName": "Retrieve drone status",
                  "description": "description: Retrieve drone status",
                  "method": "GET",
                  "urlTemplate": "/dronestatus/{deviceid}",
                  "templateParameters": [
                      {
                          "name": "deviceid",
                          "description": "device id",
                          "type": "string",
                          "required": true
                      }
                  ]
                }
        },
        {
            "type": "Microsoft.ApiManagement/service/backends",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(variables('apiManagementServiceName'), '/dev-dsaas-portal-status')]",
            "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]",
                "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'), '/properties/dev-dsaas-portal-status-key')]"
            ],
            "properties": {
                "url": "[parameters('functionAppUrlV1')]",
                "protocol": "http",
                //"resourceId": "https://management.azure.com/subscriptions/ ... /resourceGroups/dev-dsaas-portal/providers/Microsoft.Web/sites/dev-dsaas-portal-status",
                "resourceId": "[concat('https://management.azure.com', variables('functionAppResourceIdV1'))]",
                // "credentials": {
                //     "header": {
                //         "x-functions-key": [
                //             "{{dev-dsaas-portal-status-key}}"
                //         ]
                //     }
                // }
                "credentials": {
                    "query": {
                        "code": [
                            //"{{getstatusfunctionapp-code}}"
                            "{{dev-dsaas-portal-status-key}}"
                        ]
                    }
                }
            }
        },
        // {
        //     "type": "Microsoft.ApiManagement/service/namedValues",
        //     "apiVersion": "2021-01-01-preview",
        //     "name": "[concat(parameters('service_dev_dsaas_portal_manual_name'), '/dev-dsaas-portal-status-key')]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.ApiManagement/service', parameters('service_dev_dsaas_portal_manual_name'))]"
        //     ],
        //     "properties": {
        //         "displayName": "dev-dsaas-portal-status-key",
        //         "tags": [
        //             "key",
        //             "function",
        //             "auto"
        //         ],
        //         "secret": true
        //     }
        // },
        // {
        //     "type": "Microsoft.ApiManagement/service/policies",
        //     "apiVersion": "2021-01-01-preview",
        //     "name": "[concat(variables('apiManagementServiceName'), '/policy')]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
        //     ],
        //     "properties": {
        //         "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - Only the <forward-request> policy element can appear within the <backend> section element.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n-->\r\n<policies>\r\n  <inbound></inbound>\r\n  <backend>\r\n    <forward-request />\r\n  </backend>\r\n  <outbound></outbound>\r\n</policies>",
        //         "format": "xml"
        //     }
        // },
        {
            "type": "Microsoft.ApiManagement/service/properties",
            "apiVersion": "2019-01-01",
            "name": "[concat(variables('apiManagementServiceName'), '/dev-dsaas-portal-status-key')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
            ],
            "properties": {
                "tags": [
                    "key",
                    "function",
                    "code"
                ],
                "secret": true,
                "displayName": "dev-dsaas-portal-status-key", //"getstatusfunctionapp-code",
                "value": "[parameters('functionAppCodeV1')]"
            }
        },
        // {
        //     "type": "Microsoft.ApiManagement/service/subscriptions",
        //     "apiVersion": "2021-01-01-preview",
        //     "name": "[concat(parameters('service_dev_dsaas_portal_manual_name'), '/master')]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.ApiManagement/service', parameters('service_dev_dsaas_portal_manual_name'))]"
        //     ],
        //     "properties": {
        //         "scope": "[concat(resourceId('Microsoft.ApiManagement/service', parameters('service_dev_dsaas_portal_manual_name')), '/')]",
        //         "displayName": "Built-in all-access subscription",
        //         "state": "active",
        //         "allowTracing": true
        //     }
        // },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(variables('apiManagementServiceName'), '/dev-dsaas-portal-status/get-getstatusfunction/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apiManagementServiceName'), 'dev-dsaas-portal-status', 'get-getstatusfunction')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apiManagementServiceName'), 'dev-dsaas-portal-status')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apiManagementServiceName'))]"
            ],
            "properties": {
                "value": "[variables('xmlJsonEscapedPolicyV1')]", //"<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"dev-dsaas-portal-status\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "format": "xml"
            }
        }
    ]
}